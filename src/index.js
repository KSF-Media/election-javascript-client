/**
 * Election
 * KSF Media's articles service
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Area', 'model/AreaInfo', 'model/AreaResponse', 'model/AreaType', 'model/AreasResponse', 'model/Candidate', 'model/CandidateMembership', 'model/Gender', 'model/I18N', 'model/LanguageRation', 'model/MunicipalityType', 'model/Nominator', 'model/Status', 'model/Votes', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Area'), require('./model/AreaInfo'), require('./model/AreaResponse'), require('./model/AreaType'), require('./model/AreasResponse'), require('./model/Candidate'), require('./model/CandidateMembership'), require('./model/Gender'), require('./model/I18N'), require('./model/LanguageRation'), require('./model/MunicipalityType'), require('./model/Nominator'), require('./model/Status'), require('./model/Votes'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Area, AreaInfo, AreaResponse, AreaType, AreasResponse, Candidate, CandidateMembership, Gender, I18N, LanguageRation, MunicipalityType, Nominator, Status, Votes, DefaultApi) {
  'use strict';

  /**
   * KSF_Medias_articles_service.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Election = require('index'); // See note below*.
   * var xxxSvc = new Election.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Election.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Election.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Election.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Area model constructor.
     * @property {module:model/Area}
     */
    Area: Area,
    /**
     * The AreaInfo model constructor.
     * @property {module:model/AreaInfo}
     */
    AreaInfo: AreaInfo,
    /**
     * The AreaResponse model constructor.
     * @property {module:model/AreaResponse}
     */
    AreaResponse: AreaResponse,
    /**
     * The AreaType model constructor.
     * @property {module:model/AreaType}
     */
    AreaType: AreaType,
    /**
     * The AreasResponse model constructor.
     * @property {module:model/AreasResponse}
     */
    AreasResponse: AreasResponse,
    /**
     * The Candidate model constructor.
     * @property {module:model/Candidate}
     */
    Candidate: Candidate,
    /**
     * The CandidateMembership model constructor.
     * @property {module:model/CandidateMembership}
     */
    CandidateMembership: CandidateMembership,
    /**
     * The Gender model constructor.
     * @property {module:model/Gender}
     */
    Gender: Gender,
    /**
     * The I18N model constructor.
     * @property {module:model/I18N}
     */
    I18N: I18N,
    /**
     * The LanguageRation model constructor.
     * @property {module:model/LanguageRation}
     */
    LanguageRation: LanguageRation,
    /**
     * The MunicipalityType model constructor.
     * @property {module:model/MunicipalityType}
     */
    MunicipalityType: MunicipalityType,
    /**
     * The Nominator model constructor.
     * @property {module:model/Nominator}
     */
    Nominator: Nominator,
    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status: Status,
    /**
     * The Votes model constructor.
     * @property {module:model/Votes}
     */
    Votes: Votes,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
