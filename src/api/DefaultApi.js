/**
 * Election
 * KSF Media's articles service
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AreaResponse', 'model/AreasResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AreaResponse'), require('../model/AreasResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Election) {
      root.Election = {};
    }
    root.Election.DefaultApi = factory(root.Election.ApiClient, root.Election.AreaResponse, root.Election.AreasResponse);
  }
}(this, function(ApiClient, AreaResponse, AreasResponse) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 1.0.0
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the areasGet operation.
     * @callback module:api/DefaultApi~areasGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AreasResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all areas. Areas can be filtered by &#x60;type&#x60; and &#x60;parent&#x60;.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.type 
     * @param {Array.<String>} opts.parent 
     * @param {module:api/DefaultApi~areasGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AreasResponse}
     */
    this.areasGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'type': {
          value: opts['type'],
          collectionFormat: 'multi'
        },
        'parent': {
          value: opts['parent'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json;charset=utf-8'];
      var returnType = AreasResponse;

      return this.apiClient.callApi(
        '/areas', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the areasIdentifierGet operation.
     * @callback module:api/DefaultApi~areasIdentifierGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AreaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} identifier 
     * @param {module:api/DefaultApi~areasIdentifierGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AreaResponse}
     */
    this.areasIdentifierGet = function(identifier, callback) {
      var postBody = null;

      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling areasIdentifierGet");
      }


      var pathParams = {
        'identifier': identifier
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json;charset=utf-8'];
      var returnType = AreaResponse;

      return this.apiClient.callApi(
        '/areas/{identifier}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
