/**
 * Election
 * KSF Media's election service
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AreaResponse from '../model/AreaResponse';
import AreasResponse from '../model/AreasResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Gets all areas. Areas can be filtered by &#x60;type&#x60; and &#x60;parent&#x60;.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.type 
     * @param {Array.<String>} opts.parent 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AreasResponse} and HTTP response
     */
    areasGetWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'type': this.apiClient.buildCollectionParam(opts['type'], 'multi'),
        'parent': this.apiClient.buildCollectionParam(opts['parent'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=utf-8'];
      let returnType = AreasResponse;

      return this.apiClient.callApi(
        '/areas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Gets all areas. Areas can be filtered by &#x60;type&#x60; and &#x60;parent&#x60;.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.type 
     * @param {Array.<String>} opts.parent 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AreasResponse}
     */
    areasGet(opts) {
      return this.areasGetWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {String} identifier 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AreaResponse} and HTTP response
     */
    areasIdentifierGetWithHttpInfo(identifier) {
      let postBody = null;

      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling areasIdentifierGet");
      }


      let pathParams = {
        'identifier': identifier
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=utf-8'];
      let returnType = AreaResponse;

      return this.apiClient.callApi(
        '/areas/{identifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * @param {String} identifier 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AreaResponse}
     */
    areasIdentifierGet(identifier) {
      return this.areasIdentifierGetWithHttpInfo(identifier)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
